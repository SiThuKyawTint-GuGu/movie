## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/documentation
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display Swagger API page.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <title>Movie API</title>
              <link rel="stylesheet" type="text/css" href="http://localhost/docs/asset/swagger-ui.css?v=c9a0b360b746f3f8a36a51e9f57e8d27">
              <link rel="icon" type="image/png" href="http://localhost/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6" sizes="32x32"/>
              <link rel="icon" type="image/png" href="http://localhost/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384" sizes="16x16"/>
              <style>
              html
              {
                  box-sizing: border-box;
                  overflow: -moz-scrollbars-vertical;
                  overflow-y: scroll;
              }
              *,
              *:before,
              *:after
              {
                  box-sizing: inherit;
              }

              body {
                margin:0;
                background: #fafafa;
              }
              </style>
          </head>

          <body>
          <div id="swagger-ui"></div>

          <script src="http://localhost/docs/asset/swagger-ui-bundle.js?v=341c07c1d0cf4f07a83315d30e1cbc36"></script>
          <script src="http://localhost/docs/asset/swagger-ui-standalone-preset.js?v=9fb5922178409fa3e7f14d89f85c59a0"></script>
          <script>
              window.onload = function() {
                  // Build a system
                  const ui = SwaggerUIBundle({
                      dom_id: '#swagger-ui',
                      url: "http://localhost/docs/api-docs.json",
                      operationsSorter: null,
                      configUrl: null,
                      validatorUrl: null,
                      oauth2RedirectUrl: "http://localhost/api/oauth2-callback",

                      requestInterceptor: function(request) {
                          request.headers['X-CSRF-TOKEN'] = '';
                          return request;
                      },

                      presets: [
                          SwaggerUIBundle.presets.apis,
                          SwaggerUIStandalonePreset
                      ],

                      plugins: [
                          SwaggerUIBundle.plugins.DownloadUrl
                      ],

                      layout: "StandaloneLayout",
                      docExpansion : "none",
                      deepLinking: true,
                      filter: true,
                      persistAuthorization: "false",

                  })

                  window.ui = ui

                      }
          </script>
          </body>
          </html>
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/oauth2-callback
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display Oauth2 callback pages.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          <!doctype html>
          <html lang="en-US">
          <head>
              <title>Swagger UI: OAuth2 Redirect</title>
          </head>
          <body>
          <script>
              'use strict';
              function run () {
                  var oauth2 = window.opener.swaggerUIRedirectOauth2;
                  var sentState = oauth2.state;
                  var redirectUrl = oauth2.redirectUrl;
                  var isValid, qp, arr;

                  if (/code|token|error/.test(window.location.hash)) {
                      qp = window.location.hash.substring(1).replace('?', '&');
                  } else {
                      qp = location.search.substring(1);
                  }

                  arr = qp.split("&");
                  arr.forEach(function (v,i,_arr) { _arr[i] = '"' + v.replace('=', '":"') + '"';});
                  qp = qp ? JSON.parse('{' + arr.join() + '}',
                          function (key, value) {
                              return key === "" ? value : decodeURIComponent(value);
                          }
                  ) : {};

                  isValid = qp.state === sentState;

                  if ((
                    oauth2.auth.schema.get("flow") === "accessCode" ||
                    oauth2.auth.schema.get("flow") === "authorizationCode" ||
                    oauth2.auth.schema.get("flow") === "authorization_code"
                  ) && !oauth2.auth.code) {
                      if (!isValid) {
                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "warning",
                              message: "Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server."
                          });
                      }

                      if (qp.code) {
                          delete oauth2.state;
                          oauth2.auth.code = qp.code;
                          oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});
                      } else {
                          let oauthErrorMsg;
                          if (qp.error) {
                              oauthErrorMsg = "["+qp.error+"]: " +
                                  (qp.error_description ? qp.error_description+ ". " : "no accessCode received from the server. ") +
                                  (qp.error_uri ? "More info: "+qp.error_uri : "");
                          }

                          oauth2.errCb({
                              authId: oauth2.auth.name,
                              source: "auth",
                              level: "error",
                              message: oauthErrorMsg || "[Authorization failed]: no accessCode received from the server."
                          });
                      }
                  } else {
                      oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});
                  }
                  window.close();
              }

              if (document.readyState !== 'loading') {
                  run();
              } else {
                  document.addEventListener('DOMContentLoaded', function () {
                      run();
                  });
              }
          </script>
          </body>
          </html>
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. Must be at least 5 characters. Must not be greater than 20 characters.'
        required: true
        example: rosalee35@example.org
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: rosalee35@example.org
      password: nemo
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: zlvjbiumemrvinyf
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must be at least 5 characters.'
        required: true
        example: angus35@example.org
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: 'Must contain only letters and numbers. Must be at least 8 characters. Must not be greater than 255 characters.'
        required: true
        example: 'vPVn;+G?!('
        type: string
        enumValues: []
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      is_banned:
        name: is_banned
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: zlvjbiumemrvinyf
      email: angus35@example.org
      password: 'vPVn;+G?!('
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers:
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/movies/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gxpbasegbkdimbtpoocujudc
        type: string
        enumValues: []
        custom: []
      summary:
        name: summary
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        custom: []
      cover_image:
        name: cover_image
        description: 'Must be an image.'
        required: true
        example: null
        type: file
        enumValues: []
        custom: []
      imdb_ratings:
        name: imdb_ratings
        description: ''
        required: true
        example: dolor
        type: string
        enumValues: []
        custom: []
      pdf_download_link:
        name: pdf_download_link
        description: 'Must not be greater than 255 characters.'
        required: true
        example: juld
        type: string
        enumValues: []
        custom: []
      publish_status:
        name: publish_status
        description: ''
        required: true
        example: dolorum
        type: string
        enumValues: []
        custom: []
      genre_ids:
        name: genre_ids
        description: 'Must be a valid JSON string.'
        required: true
        example: '["vel","voluptas"]'
        type: string
        enumValues: []
        custom: []
      tag_ids:
        name: tag_ids
        description: 'Must be a valid JSON string.'
        required: true
        example: '["possimus","laboriosam"]'
        type: string
        enumValues: []
        custom: []
      author_ids:
        name: author_ids
        description: 'Must be a valid JSON string.'
        required: true
        example: '["quisquam","eum"]'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      title: gxpbasegbkdimbtpoocujudc
      summary: qui
      imdb_ratings: dolor
      pdf_download_link: juld
      publish_status: dolorum
      genre_ids: '["vel","voluptas"]'
      tag_ids: '["possimus","laboriosam"]'
      author_ids: '["quisquam","eum"]'
    fileParameters:
      cover_image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/movies/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: ''
        required: true
        example: 7140305.1216435
        type: number
        enumValues: []
        custom: []
      limit:
        name: limit
        description: ''
        required: true
        example: 4437.64429708
        type: number
        enumValues: []
        custom: []
      search_key:
        name: search_key
        description: ''
        required: false
        example: sint
        type: string
        enumValues: []
        custom: []
      genre_id:
        name: genre_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      sort_type:
        name: sort_type
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - desc
          - asc
        custom: []
      sort_by:
        name: sort_by
        description: ''
        required: false
        example: imdb_rating
        type: string
        enumValues:
          - id
          - name
          - release_date
          - imdb_rating
          - position
          - popularity
          - updated_at
        custom: []
    cleanBodyParameters:
      page: 7140305.1216435
      limit: 4437.64429708
      search_key: sint
      sort_type: desc
      sort_by: imdb_rating
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/movies/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xwvq
        type: string
        enumValues: []
        custom: []
      summary:
        name: summary
        description: ''
        required: true
        example: ullam
        type: string
        enumValues: []
        custom: []
      imdb_ratings:
        name: imdb_ratings
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        custom: []
      publish_status:
        name: publish_status
        description: ''
        required: true
        example: velit
        type: string
        enumValues: []
        custom: []
      genre_ids:
        name: genre_ids
        description: 'Must be a valid JSON string.'
        required: true
        example: '["qui","quam"]'
        type: string
        enumValues: []
        custom: []
      tag_ids:
        name: tag_ids
        description: 'Must be a valid JSON string.'
        required: true
        example: '["similique","aut"]'
        type: string
        enumValues: []
        custom: []
      author_ids:
        name: author_ids
        description: 'Must be a valid JSON string.'
        required: true
        example: '["rerum","ullam"]'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      title: xwvq
      summary: ullam
      imdb_ratings: officia
      publish_status: velit
      genre_ids: '["qui","quam"]'
      tag_ids: '["similique","aut"]'
      author_ids: '["rerum","ullam"]'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/movies/destory
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/authors/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: uhwl
        type: string
        enumValues: []
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: uhwl
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/genres/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: seudddxukegppcbfcaxizru
        type: string
        enumValues: []
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: seudddxukegppcbfcaxizru
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tags/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: wauxsofugfuhy
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: wauxsofugfuhy
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comments/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: ''
        required: true
        example: veritatis
        type: string
        enumValues: []
        custom: []
      comment:
        name: comment
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: odell65@example.net
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      movie_id: veritatis
      comment: et
      email: odell65@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comments/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
